{"ast":null,"code":"var _jsxFileName = \"/Users/shenyankun/Documents/GitHub/sea-level-visual/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Ocean from \"./components/Ocean\";\nimport { Slider, Drawer } from 'antd';\nimport Linedrawer from \"./Linedrawer\";\nimport Thermo from \"./components/Thermo\";\nimport BgParticles from \"./components/BgParticles\";\n\nconst data = require('./static/nasa_data.json');\n\nconst initialYear = 2019;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onYearChange = value => {\n      this.setState({\n        year: value,\n        co2: parseFloat(data[value][\"co2\"]),\n        temp: parseFloat(data[value][\"temp\"]),\n        arctic: parseFloat(data[value][\"arctic\"]),\n        sealevel: parseFloat(data[value][\"sealevel\"]),\n        greenland: parseFloat(data[value][\"greenland\"])\n      });\n      this.setBackgroundColor(value);\n    };\n\n    this.state = {\n      year: initialYear,\n      co2: parseFloat(data[initialYear][\"co2\"]),\n      temp: parseFloat(data[initialYear][\"temp\"]),\n      arctic: parseFloat(data[initialYear][\"arctic\"]),\n      sealevel: parseFloat(data[initialYear][\"sealevel\"]),\n      greenland: parseFloat(data[initialYear][\"greenland\"])\n    };\n    this.setBackgroundColor(initialYear);\n    this.onYearChange.bind(this);\n    console.log(data);\n  }\n\n  setBackgroundColor(value) {\n    // h from 200 to 360, \n    const bcolor = \"hsl(\".concat(65 - 70 * this.state.temp, \", 100%, 75%)\");\n    document.getElementsByTagName('body')[0].style.backgroundColor = bcolor;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(BgParticles, {\n      co2: this.state.co2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Linedrawer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Slider, {\n      min: 1993,\n      max: 2019,\n      defaultValue: initialYear,\n      value: this.state.year,\n      onChange: this.onYearChange,\n      tooltipVisible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.year), React.createElement(Thermo, {\n      temp: this.state.temp,\n      co2: this.state.co2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Ocean, {\n      sealevel: this.state.sealevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shenyankun/Documents/GitHub/sea-level-visual/src/App.js"],"names":["React","Ocean","Slider","Drawer","Linedrawer","Thermo","BgParticles","data","require","initialYear","App","Component","constructor","props","onYearChange","value","setState","year","co2","parseFloat","temp","arctic","sealevel","greenland","setBackgroundColor","state","bind","console","log","bcolor","document","getElementsByTagName","style","backgroundColor","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Ocean from \"./components/Ocean\";\nimport { Slider, Drawer } from 'antd';\nimport Linedrawer from \"./Linedrawer\";\nimport Thermo from \"./components/Thermo\";\nimport BgParticles from \"./components/BgParticles\"\n\nconst data = require('./static/nasa_data.json');\nconst initialYear = 2019\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: initialYear,\n      co2: parseFloat(data[initialYear][\"co2\"]),\n      temp: parseFloat(data[initialYear][\"temp\"]),\n      arctic: parseFloat(data[initialYear][\"arctic\"]),\n      sealevel: parseFloat(data[initialYear][\"sealevel\"]),\n      greenland: parseFloat(data[initialYear][\"greenland\"])\n    };\n    this.setBackgroundColor(initialYear);\n    this.onYearChange.bind(this);\n    console.log(data)\n  }\n  setBackgroundColor(value) {\n    // h from 200 to 360, \n    const bcolor = `hsl(${65 - 70 * this.state.temp}, 100%, 75%)`;\n    document.getElementsByTagName('body')[0].style.backgroundColor = bcolor\n  }\n  onYearChange = value => {\n    this.setState({\n      year: value,\n      co2: parseFloat(data[value][\"co2\"]),\n      temp: parseFloat(data[value][\"temp\"]),\n      arctic: parseFloat(data[value][\"arctic\"]),\n      sealevel: parseFloat(data[value][\"sealevel\"]),\n      greenland: parseFloat(data[value][\"greenland\"])\n    });\n    this.setBackgroundColor(value)\n  }\n  render() {\n    return (\n      <div className=\"App container\">\n\n        <BgParticles co2={this.state.co2}></BgParticles>\n        <Linedrawer/>\n        <Slider\n          min={1993}\n          max={2019}\n          defaultValue={initialYear}\n          value={this.state.year}\n          onChange={this.onYearChange}\n          tooltipVisible\n        />\n        <p className=\"year\">{this.state.year}</p>\n        <Thermo temp={this.state.temp} co2={this.state.co2}/>\n        <Ocean sealevel={this.state.sealevel} />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}