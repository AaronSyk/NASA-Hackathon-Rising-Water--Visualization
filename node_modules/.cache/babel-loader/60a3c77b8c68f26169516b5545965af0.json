{"ast":null,"code":"var _jsxFileName = \"/Users/shenyankun/Documents/GitHub/sea-level-visual/src/components/Linechart.js\";\nimport React from \"react\";\nimport { Line } from 'react-chartjs-2';\n\nconst dataSrc = require('../static/nasa_data.json');\n\nconst data = {\n  labels: ['1995', '2000', '2005', '2010', '2015', '2019'],\n  dataset: [{\n    label: 'Year',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 10,\n    pointHoverRadius: 50,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40] //data: [dataSrc['1995'][\"sealevel\"], dataSrc['2000'][\"sealevel\"], dataSrc['2005'][\"sealevel\"],\n    //     dataSrc['2010'][\"sealevel\"], dataSrc['2015'][\"sealevel\"], dataSrc['2019'][\"sealevel\"]]\n\n  }]\n};\n\nconst getOptions = (showLabelX, showLabelY) => {\n  return {\n    legend: {\n      display: true,\n      position: \"right\"\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true\n        },\n        ticks: {\n          display: showLabelX ? true : false,\n          minRotation: 0\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          display: false\n        },\n        scaleLabel: {\n          display: true\n        },\n        ticks: {\n          display: showLabelY ? true : false,\n          minRotation: 0\n        }\n      }]\n    }\n  };\n};\n\nclass Linechart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showLabelX: true,\n      showLabelY: true\n    };\n\n    this.onChangeShowX = () => this.setState({\n      showLabelX: !this.state.showLabelX\n    });\n\n    this.onChangeShowY = () => this.setState({\n      showLabelY: !this.state.showLabelY\n    });\n  }\n\n  render() {\n    const options = getOptions(this.state.showLabelX, this.state.showLabelY);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Sea Level Changes\"), React.createElement(Line, {\n      data: data,\n      width: 100,\n      height: 50,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Linechart;","map":{"version":3,"sources":["/Users/shenyankun/Documents/GitHub/sea-level-visual/src/components/Linechart.js"],"names":["React","Line","dataSrc","require","data","labels","dataset","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","getOptions","showLabelX","showLabelY","legend","display","position","scales","yAxes","scaleLabel","ticks","minRotation","xAxes","gridLines","Linechart","Component","state","onChangeShowX","setState","onChangeShowY","render","options"],"mappings":"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","sourcesContent":["import React from \"react\"; \nimport { Line } from 'react-chartjs-2';\n\n\nconst dataSrc = require('../static/nasa_data.json');\n\nconst data = {\n    labels : ['1995', '2000', '2005', '2010', '2015', '2019'],\n    dataset : [\n        {\n            label: 'Year',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 10,\n            pointHoverRadius: 50,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data : [65, 59, 80, 81, 56, 55, 40],\n            //data: [dataSrc['1995'][\"sealevel\"], dataSrc['2000'][\"sealevel\"], dataSrc['2005'][\"sealevel\"],\n              //     dataSrc['2010'][\"sealevel\"], dataSrc['2015'][\"sealevel\"], dataSrc['2019'][\"sealevel\"]]\n        }\n    ]\n};\n\nconst getOptions = (showLabelX, showLabelY) => {\n  return {\n    legend: {\n      display: true,\n      position: \"right\"\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true\n          },\n          ticks: {\n            display: showLabelX ? true : false,\n            minRotation: 0\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false\n          },\n          scaleLabel: {\n            display: true\n          },\n          ticks: {\n            display: showLabelY ? true : false,\n            minRotation: 0\n          }\n        }\n      ]\n    }\n  };\n};\n\n\nclass Linechart extends React.Component{\n    state = { showLabelX: true, showLabelY: true };\n\n    \n    onChangeShowX = () => this.setState({ showLabelX: !this.state.showLabelX });\n    onChangeShowY = () => this.setState({ showLabelY: !this.state.showLabelY });\n\n    render() {\n      const options = getOptions(this.state.showLabelX, this.state.showLabelY);\n      return (\n        <div>\n          <h2>Sea Level Changes</h2>\n          <Line data={data} width={100} height={50}\n            options={options}\n          />\n          \n        </div>\n      );\n    }\n  }\n\n  export default Linechart;"]},"metadata":{},"sourceType":"module"}